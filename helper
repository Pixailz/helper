#!/usr/bin/env python3

# built in import
import re
import os

# custom import
from modules.utils.regex import re
from modules.utils.log import log
from modules.makefile import Makefile
from modules.prototype import Prototype

if __name__ == "__main__":
	config = {
		"makefile":		"mk/srcs.mk",
		"src_dir":		"src"
	}
	makefile = Makefile(**config)
	makefile.add_var("SRC_INT", "integer")
	makefile.add_var("SRC_STR", "string")
	makefile.add_var("SRC_MEM", "memory")
	makefile.add_var("SRC_CHK", "check")
	makefile.add_var("SRC_LST", "list")
	makefile.add_var("SRC_PRT", "print")
	makefile.add_var("SRC_INP", "input")
	makefile.add_var("SRC_RDM", "random")
	makefile.add_var("SRC_LNX", "linux")
	makefile.add_var("SRC_NET_IPV4", "network/ipv4")
	makefile.add_var("SRC_ERR", "error")
	makefile.update_makefile()
	config = {
		"inc_dir":	"inc",
		"src_dir":	"src"
	}
	header = Prototype(**config)
	header.add_header("libft_integer.h", "integer")
	header.add_header("libft_string.h", "string")
	header.add_header("libft_memory.h", "memory")
	header.add_header("libft_check.h", "check")
	header.add_header("libft_list.h", "list")
	header.add_header("libft_print.h", "print")
	header.add_header("libft_input.h", "input")
	header.add_header("libft_random.h", "random")
	header.add_header("libft_linux.h", "linux")
	header.add_header("libft_network/ipv4.h", "network/ipv4")
	header.add_header("libft_error.h", "error")
	header.update_include()
